# Tên ứng dụng
spring.application.name=chatapp
# Server port (sẽ được override bởi docker-compose nếu chạy trong container)
# server.port=8080

# MongoDB Configuration
spring.data.mongodb.uri=mongodb+srv://22520988:22520988@cluster0.zeztdiz.mongodb.net/ChatApp?retryWrites=true&w=majority&appName=Cluster0

# JWT Configuration
jwt.secret=VGhpcyBpcyBhIHNlY3JldCBrZXkgZm9yIEpXVC4=
jwt.access.expiration=3600000  # 1 hour in milliseconds
jwt.refresh.expiration=604800000 # 7 days in milliseconds

# Redis Configuration (host và port sẽ được override bởi docker-compose)
spring.data.redis.host=${SPRING_DATA_REDIS_HOST:localhost}
spring.data.redis.port=${SPRING_DATA_REDIS_PORT:6379}

# Logging for Redis (optional, for debugging)
logging.level.org.springframework.data.redis=DEBUG
logging.level.io.lettuce.core=DEBUG

# Kafka Configuration
# spring.kafka.bootstrap-servers sẽ được override bởi docker-compose
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
# spring.kafka.consumer.group-id sẽ được override bởi docker-compose cho mỗi instance
spring.kafka.consumer.group-id=${SPRING_KAFKA_CONSUMER_GROUP_ID:default-chat-group}

# Kafka Serializer/Deserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=* 
# Cho phép deserialize tất cả các package (cân nhắc về bảo mật)
# Hoặc liệt kê cụ thể: com.example.chatapp.repository.entities,java.util,java.lang

# Kafka Topics (để dễ quản lý và thay đổi)
kafka.topic.room-messages=chat-room-messages
kafka.topic.private-messages=chat-private-messages

# Instance ID (sẽ được override bởi biến môi trường INSTANCE_ID trong docker-compose)
instance.id=default_instance_id_from_props

# Cấu hình cho Jackson để xử lý LocalDateTime với Kafka/JSON (nếu cần)
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.datatype.jsr310.deserialization.date-time-format=yyyy-MM-dd'T'HH:mm:ss.SSSSSSSSS
spring.jackson.datatype.jsr310.serialization.date-time-format=yyyy-MM-dd'T'HH:mm:ss.SSSSSSSSS

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG 
